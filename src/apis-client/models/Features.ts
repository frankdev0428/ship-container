/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Features
 */
export interface Features {
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasTemperatureInt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasTemperatureExt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasPosition?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasHumidityInt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasHumidityExt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasPressureInt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasPressureExt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasLightInt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasLightExt?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Features
     */
    hasDoors?: boolean;
}

export function FeaturesFromJSON(json: any): Features {
    return FeaturesFromJSONTyped(json, false);
}

export function FeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Features {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hasTemperatureInt': !exists(json, 'hasTemperatureInt') ? undefined : json['hasTemperatureInt'],
        'hasTemperatureExt': !exists(json, 'hasTemperatureExt') ? undefined : json['hasTemperatureExt'],
        'hasPosition': !exists(json, 'hasPosition') ? undefined : json['hasPosition'],
        'hasHumidityInt': !exists(json, 'hasHumidityInt') ? undefined : json['hasHumidityInt'],
        'hasHumidityExt': !exists(json, 'hasHumidityExt') ? undefined : json['hasHumidityExt'],
        'hasPressureInt': !exists(json, 'hasPressureInt') ? undefined : json['hasPressureInt'],
        'hasPressureExt': !exists(json, 'hasPressureExt') ? undefined : json['hasPressureExt'],
        'hasLightInt': !exists(json, 'hasLightInt') ? undefined : json['hasLightInt'],
        'hasLightExt': !exists(json, 'hasLightExt') ? undefined : json['hasLightExt'],
        'hasDoors': !exists(json, 'hasDoors') ? undefined : json['hasDoors'],
    };
}

export function FeaturesToJSON(value?: Features | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hasTemperatureInt': value.hasTemperatureInt,
        'hasTemperatureExt': value.hasTemperatureExt,
        'hasPosition': value.hasPosition,
        'hasHumidityInt': value.hasHumidityInt,
        'hasHumidityExt': value.hasHumidityExt,
        'hasPressureInt': value.hasPressureInt,
        'hasPressureExt': value.hasPressureExt,
        'hasLightInt': value.hasLightInt,
        'hasLightExt': value.hasLightExt,
        'hasDoors': value.hasDoors,
    };
}


