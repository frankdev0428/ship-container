/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PublicContainerEvent
 */
export interface PublicContainerEvent {
    /**
     * alert codes
     * @type {string}
     * @memberof PublicContainerEvent
     */
    alertCode: PublicContainerEventAlertCodeEnum;
    /**
     * container ID
     * @type {string}
     * @memberof PublicContainerEvent
     */
    containerId: string;
    /**
     * time
     * @type {Date}
     * @memberof PublicContainerEvent
     */
    timestamp: Date;
    /**
     * 
     * @type {string}
     * @memberof PublicContainerEvent
     */
    comment?: string;
}

/**
* @export
* @enum {string}
*/
export enum PublicContainerEventAlertCodeEnum {
    Doo = 'DOO',
    Doc = 'DOC',
    Sho = 'SHO',
    Lig = 'LIG',
    Lie = 'LIE'
}

export function PublicContainerEventFromJSON(json: any): PublicContainerEvent {
    return PublicContainerEventFromJSONTyped(json, false);
}

export function PublicContainerEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicContainerEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alertCode': json['alertCode'],
        'containerId': json['containerId'],
        'timestamp': (new Date(json['timestamp'])),
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
    };
}

export function PublicContainerEventToJSON(value?: PublicContainerEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alertCode': value.alertCode,
        'containerId': value.containerId,
        'timestamp': (value.timestamp.toISOString()),
        'comment': value.comment,
    };
}


