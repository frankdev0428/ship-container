/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Container
 */
export interface Container {
    /**
     * ISO code, primary key, natural key
     * @type {string}
     * @memberof Container
     */
    containerId: string;
    /**
     * container operational status
     * @type {string}
     * @memberof Container
     */
    characteristics_size: ContainerCharacteristicsSizeEnum;
    /**
     * container type
     * @type {string}
     * @memberof Container
     */
    characteristics_type: ContainerCharacteristicsTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    containerVersion: string;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    characteristics_maxPayload: string;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    characteristics_builtYear: string;
    /**
     * updatedAt
     * @type {Date}
     * @memberof Container
     */
    updatedAt: Date;
    /**
     * createdAt
     * @type {Date}
     * @memberof Container
     */
    createdAt: Date;
    /**
     * volume
     * @type {number}
     * @memberof Container
     */
    volume: number;
    /**
     * weight
     * @type {number}
     * @memberof Container
     */
    characteristics_tare: number;
    /**
     * Inspection Date
     * @type {Date}
     * @memberof Container
     */
    inspectionDate?: Date;
    /**
     * CSC Cert No.
     * @type {string}
     * @memberof Container
     */
    cscCertNo?: string;
    /**
     * createdAt
     * @type {Date}
     * @memberof Container
     */
    cscCertDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    characteristics_grade?: string;
    /**
     * cscCertLink
     * @type {string}
     * @memberof Container
     */
    cscCertLink?: string;
    /**
     * end panel
     * @type {boolean}
     * @memberof Container
     */
    electronicsCharging?: boolean;
    /**
     * insurance
     * @type {string}
     * @memberof Container
     */
    insurance?: string;
    /**
     * Insurance date
     * @type {Date}
     * @memberof Container
     */
    insuranceDate?: Date;
    /**
     * cameraExt
     * @type {boolean}
     * @memberof Container
     */
    cameraExt?: boolean;
    /**
     * cameraInt
     * @type {boolean}
     * @memberof Container
     */
    cameraInt?: boolean;
    /**
     * user id
     * @type {string}
     * @memberof Container
     */
    lastChangedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    floorType?: string;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    doorType?: string;
    /**
     * the last user who changed the object
     * @type {string}
     * @memberof Container
     */
    lastChangedByUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    lastOperation?: ContainerLastOperationEnum;
    /**
     * 
     * @type {string}
     * @memberof Container
     */
    equipmentId: string;
}

/**
* @export
* @enum {string}
*/
export enum ContainerCharacteristicsSizeEnum {
    _20ft = '20ft',
    _40ft = '40ft',
    _45ft = '45ft'
}/**
* @export
* @enum {string}
*/
export enum ContainerCharacteristicsTypeEnum {
    Reefer = 'REEFER',
    Flexitank = 'FLEXITANK',
    Normal = 'NORMAL'
}/**
* @export
* @enum {string}
*/
export enum ContainerLastOperationEnum {
    D = 'D',
    C = 'C',
    U = 'U'
}

export function ContainerFromJSON(json: any): Container {
    return ContainerFromJSONTyped(json, false);
}

export function ContainerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Container {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'containerId': json['containerId'],
        'characteristics_size': json['characteristics_size'],
        'characteristics_type': json['characteristics_type'],
        'containerVersion': json['containerVersion'],
        'characteristics_maxPayload': json['characteristics_maxPayload'],
        'characteristics_builtYear': json['characteristics_builtYear'],
        'updatedAt': (new Date(json['updatedAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'volume': json['volume'],
        'characteristics_tare': json['characteristics_tare'],
        'inspectionDate': !exists(json, 'inspectionDate') ? undefined : (new Date(json['inspectionDate'])),
        'cscCertNo': !exists(json, 'cscCertNo') ? undefined : json['cscCertNo'],
        'cscCertDate': !exists(json, 'cscCertDate') ? undefined : (new Date(json['cscCertDate'])),
        'characteristics_grade': !exists(json, 'characteristics_grade') ? undefined : json['characteristics_grade'],
        'cscCertLink': !exists(json, 'cscCertLink') ? undefined : json['cscCertLink'],
        'electronicsCharging': !exists(json, 'electronicsCharging') ? undefined : json['electronicsCharging'],
        'insurance': !exists(json, 'insurance') ? undefined : json['insurance'],
        'insuranceDate': !exists(json, 'insuranceDate') ? undefined : (new Date(json['insuranceDate'])),
        'cameraExt': !exists(json, 'cameraExt') ? undefined : json['cameraExt'],
        'cameraInt': !exists(json, 'cameraInt') ? undefined : json['cameraInt'],
        'lastChangedBy': !exists(json, 'lastChangedBy') ? undefined : json['lastChangedBy'],
        'floorType': !exists(json, 'floorType') ? undefined : json['floorType'],
        'doorType': !exists(json, 'doorType') ? undefined : json['doorType'],
        'lastChangedByUserId': !exists(json, 'lastChangedByUserId') ? undefined : json['lastChangedByUserId'],
        'lastOperation': !exists(json, 'lastOperation') ? undefined : json['lastOperation'],
        'equipmentId': json['equipmentId'],
    };
}

export function ContainerToJSON(value?: Container | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'containerId': value.containerId,
        'characteristics_size': value.characteristics_size,
        'characteristics_type': value.characteristics_type,
        'containerVersion': value.containerVersion,
        'characteristics_maxPayload': value.characteristics_maxPayload,
        'characteristics_builtYear': value.characteristics_builtYear,
        'updatedAt': (value.updatedAt.toISOString()),
        'createdAt': (value.createdAt.toISOString()),
        'volume': value.volume,
        'characteristics_tare': value.characteristics_tare,
        'inspectionDate': value.inspectionDate === undefined ? undefined : (value.inspectionDate.toISOString()),
        'cscCertNo': value.cscCertNo,
        'cscCertDate': value.cscCertDate === undefined ? undefined : (value.cscCertDate.toISOString()),
        'characteristics_grade': value.characteristics_grade,
        'cscCertLink': value.cscCertLink,
        'electronicsCharging': value.electronicsCharging,
        'insurance': value.insurance,
        'insuranceDate': value.insuranceDate === undefined ? undefined : (value.insuranceDate.toISOString()),
        'cameraExt': value.cameraExt,
        'cameraInt': value.cameraInt,
        'lastChangedBy': value.lastChangedBy,
        'floorType': value.floorType,
        'doorType': value.doorType,
        'lastChangedByUserId': value.lastChangedByUserId,
        'lastOperation': value.lastOperation,
        'equipmentId': value.equipmentId,
    };
}


