/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContainerBoardPairingProfilePostInput
 */
export interface ContainerBoardPairingProfilePostInput {
    /**
     * which container does this log relate to
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    containerId: string;
    /**
     * which board does this log relate to
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    boardId: string;
    /**
     * 
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    boardSource: string;
    /**
     * Date for board installation
     * @type {Date}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    installDate: Date;
    /**
     * Date for board removal
     * @type {Date}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    removalDate?: Date;
    /**
     * Comments for board installation
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    installComments?: string;
    /**
     * Comments for board removal
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    removalComments?: string;
    /**
     * ID of the technician who installed board
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    installTechnicianId?: string;
    /**
     * ID of the technician who removed board
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    removalTechnicianId?: string;
    /**
     * Location ID of installation of board on container
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    installLocationId?: string;
    /**
     * Location ID of removal of board on container
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    removalLocationId?: string;
    /**
     * Location name of installation of board on container
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    installLocationName?: string;
    /**
     * Location name of removal of board on container
     * @type {string}
     * @memberof ContainerBoardPairingProfilePostInput
     */
    removalLocationName?: string;
}

export function ContainerBoardPairingProfilePostInputFromJSON(json: any): ContainerBoardPairingProfilePostInput {
    return ContainerBoardPairingProfilePostInputFromJSONTyped(json, false);
}

export function ContainerBoardPairingProfilePostInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContainerBoardPairingProfilePostInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'containerId': json['containerId'],
        'boardId': json['boardId'],
        'boardSource': json['boardSource'],
        'installDate': (new Date(json['installDate'])),
        'removalDate': !exists(json, 'removalDate') ? undefined : (new Date(json['removalDate'])),
        'installComments': !exists(json, 'installComments') ? undefined : json['installComments'],
        'removalComments': !exists(json, 'removalComments') ? undefined : json['removalComments'],
        'installTechnicianId': !exists(json, 'installTechnicianId') ? undefined : json['installTechnicianId'],
        'removalTechnicianId': !exists(json, 'removalTechnicianId') ? undefined : json['removalTechnicianId'],
        'installLocationId': !exists(json, 'installLocationId') ? undefined : json['installLocationId'],
        'removalLocationId': !exists(json, 'removalLocationId') ? undefined : json['removalLocationId'],
        'installLocationName': !exists(json, 'installLocationName') ? undefined : json['installLocationName'],
        'removalLocationName': !exists(json, 'removalLocationName') ? undefined : json['removalLocationName'],
    };
}

export function ContainerBoardPairingProfilePostInputToJSON(value?: ContainerBoardPairingProfilePostInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'containerId': value.containerId,
        'boardId': value.boardId,
        'boardSource': value.boardSource,
        'installDate': (value.installDate.toISOString()),
        'removalDate': value.removalDate === undefined ? undefined : (value.removalDate.toISOString()),
        'installComments': value.installComments,
        'removalComments': value.removalComments,
        'installTechnicianId': value.installTechnicianId,
        'removalTechnicianId': value.removalTechnicianId,
        'installLocationId': value.installLocationId,
        'removalLocationId': value.removalLocationId,
        'installLocationName': value.installLocationName,
        'removalLocationName': value.removalLocationName,
    };
}


