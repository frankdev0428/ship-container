/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DepotContainer
 */
export interface DepotContainer {
    /**
     * testcavu_3
     * @type {string}
     * @memberof DepotContainer
     */
    aelerContainerId: string;
    /**
     * bcd9462a-db95-4e5d-adf9-3035105ede91
     * @type {string}
     * @memberof DepotContainer
     */
    equipmentId: string;
    /**
     * ALLOCATED
     * @type {string}
     * @memberof DepotContainer
     */
    status?: string;
    /**
     * 3d0cbb15-6b79-453f-953a-c5a20cf49991
     * @type {string}
     * @memberof DepotContainer
     */
    statusId?: string;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    startAtActual?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    startAtPlanned?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    stopAtActual?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    stopAtPlanned?: Date;
    /**
     * 
     * @type {string}
     * @memberof DepotContainer
     */
    statusNext?: string;
    /**
     * 
     * @type {string}
     * @memberof DepotContainer
     */
    statusIdNext?: string;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    startAtActualNext?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    startAtPlannedNext?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    stopAtActualNext?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    stopAtPlannedNext?: Date;
    /**
     * 
     * @type {number}
     * @memberof DepotContainer
     */
    secondsIdle?: number;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    depotInDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DepotContainer
     */
    depotOutDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DepotContainer
     */
    depotStatus?: string;
}

export function DepotContainerFromJSON(json: any): DepotContainer {
    return DepotContainerFromJSONTyped(json, false);
}

export function DepotContainerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DepotContainer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aelerContainerId': json['aelerContainerId'],
        'equipmentId': json['equipmentId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusId': !exists(json, 'statusId') ? undefined : json['statusId'],
        'startAtActual': !exists(json, 'startAtActual') ? undefined : (new Date(json['startAtActual'])),
        'startAtPlanned': !exists(json, 'startAtPlanned') ? undefined : (new Date(json['startAtPlanned'])),
        'stopAtActual': !exists(json, 'stopAtActual') ? undefined : (new Date(json['stopAtActual'])),
        'stopAtPlanned': !exists(json, 'stopAtPlanned') ? undefined : (new Date(json['stopAtPlanned'])),
        'statusNext': !exists(json, 'statusNext') ? undefined : json['statusNext'],
        'statusIdNext': !exists(json, 'statusIdNext') ? undefined : json['statusIdNext'],
        'startAtActualNext': !exists(json, 'startAtActualNext') ? undefined : (new Date(json['startAtActualNext'])),
        'startAtPlannedNext': !exists(json, 'startAtPlannedNext') ? undefined : (new Date(json['startAtPlannedNext'])),
        'stopAtActualNext': !exists(json, 'stopAtActualNext') ? undefined : (new Date(json['stopAtActualNext'])),
        'stopAtPlannedNext': !exists(json, 'stopAtPlannedNext') ? undefined : (new Date(json['stopAtPlannedNext'])),
        'secondsIdle': !exists(json, 'secondsIdle') ? undefined : json['secondsIdle'],
        'depotInDate': !exists(json, 'depotInDate') ? undefined : (new Date(json['depotInDate'])),
        'depotOutDate': !exists(json, 'depotOutDate') ? undefined : (new Date(json['depotOutDate'])),
        'depotStatus': !exists(json, 'depotStatus') ? undefined : json['depotStatus'],
    };
}

export function DepotContainerToJSON(value?: DepotContainer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aelerContainerId': value.aelerContainerId,
        'equipmentId': value.equipmentId,
        'status': value.status,
        'statusId': value.statusId,
        'startAtActual': value.startAtActual === undefined ? undefined : (value.startAtActual.toISOString()),
        'startAtPlanned': value.startAtPlanned === undefined ? undefined : (value.startAtPlanned.toISOString()),
        'stopAtActual': value.stopAtActual === undefined ? undefined : (value.stopAtActual.toISOString()),
        'stopAtPlanned': value.stopAtPlanned === undefined ? undefined : (value.stopAtPlanned.toISOString()),
        'statusNext': value.statusNext,
        'statusIdNext': value.statusIdNext,
        'startAtActualNext': value.startAtActualNext === undefined ? undefined : (value.startAtActualNext.toISOString()),
        'startAtPlannedNext': value.startAtPlannedNext === undefined ? undefined : (value.startAtPlannedNext.toISOString()),
        'stopAtActualNext': value.stopAtActualNext === undefined ? undefined : (value.stopAtActualNext.toISOString()),
        'stopAtPlannedNext': value.stopAtPlannedNext === undefined ? undefined : (value.stopAtPlannedNext.toISOString()),
        'secondsIdle': value.secondsIdle,
        'depotInDate': value.depotInDate === undefined ? undefined : (value.depotInDate.toISOString()),
        'depotOutDate': value.depotOutDate === undefined ? undefined : (value.depotOutDate.toISOString()),
        'depotStatus': value.depotStatus,
    };
}


