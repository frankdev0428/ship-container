/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LeaseVisibilityContract
 */
export interface LeaseVisibilityContract {
    /**
     * 
     * @type {string}
     * @memberof LeaseVisibilityContract
     */
    leaseVisibilityContractId: string;
    /**
     * 
     * @type {string}
     * @memberof LeaseVisibilityContract
     */
    equipmentLeaseContractId: string;
    /**
     * 
     * @type {string}
     * @memberof LeaseVisibilityContract
     */
    customerId: string;
    /**
     * 
     * @type {string}
     * @memberof LeaseVisibilityContract
     */
    lastChangedBy: string;
    /**
     * 
     * @type {Date}
     * @memberof LeaseVisibilityContract
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LeaseVisibilityContract
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LeaseVisibilityContract
     */
    startAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LeaseVisibilityContract
     */
    stopAt?: Date;
    /**
     * flag
     * @type {boolean}
     * @memberof LeaseVisibilityContract
     */
    isSameDatesAsLease?: boolean;
    /**
     * flag
     * @type {boolean}
     * @memberof LeaseVisibilityContract
     */
    isSameDatesAsStatus?: boolean;
    /**
     * is it active or not
     * @type {boolean}
     * @memberof LeaseVisibilityContract
     */
    isActive?: boolean;
    /**
     * the last user who changed the object
     * @type {string}
     * @memberof LeaseVisibilityContract
     */
    lastChangedByUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof LeaseVisibilityContract
     */
    lastOperation?: LeaseVisibilityContractLastOperationEnum;
}

/**
* @export
* @enum {string}
*/
export enum LeaseVisibilityContractLastOperationEnum {
    D = 'D',
    C = 'C',
    U = 'U'
}

export function LeaseVisibilityContractFromJSON(json: any): LeaseVisibilityContract {
    return LeaseVisibilityContractFromJSONTyped(json, false);
}

export function LeaseVisibilityContractFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeaseVisibilityContract {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'leaseVisibilityContractId': json['leaseVisibilityContractId'],
        'equipmentLeaseContractId': json['equipmentLeaseContractId'],
        'customerId': json['customerId'],
        'lastChangedBy': json['lastChangedBy'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'startAt': !exists(json, 'startAt') ? undefined : (new Date(json['startAt'])),
        'stopAt': !exists(json, 'stopAt') ? undefined : (new Date(json['stopAt'])),
        'isSameDatesAsLease': !exists(json, 'isSameDatesAsLease') ? undefined : json['isSameDatesAsLease'],
        'isSameDatesAsStatus': !exists(json, 'isSameDatesAsStatus') ? undefined : json['isSameDatesAsStatus'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'lastChangedByUserId': !exists(json, 'lastChangedByUserId') ? undefined : json['lastChangedByUserId'],
        'lastOperation': !exists(json, 'lastOperation') ? undefined : json['lastOperation'],
    };
}

export function LeaseVisibilityContractToJSON(value?: LeaseVisibilityContract | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'leaseVisibilityContractId': value.leaseVisibilityContractId,
        'equipmentLeaseContractId': value.equipmentLeaseContractId,
        'customerId': value.customerId,
        'lastChangedBy': value.lastChangedBy,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'startAt': value.startAt === undefined ? undefined : (value.startAt.toISOString()),
        'stopAt': value.stopAt === undefined ? undefined : (value.stopAt.toISOString()),
        'isSameDatesAsLease': value.isSameDatesAsLease,
        'isSameDatesAsStatus': value.isSameDatesAsStatus,
        'isActive': value.isActive,
        'lastChangedByUserId': value.lastChangedByUserId,
        'lastOperation': value.lastOperation,
    };
}


