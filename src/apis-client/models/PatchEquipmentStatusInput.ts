/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchEquipmentStatusInput
 */
export interface PatchEquipmentStatusInput {
    /**
     * 
     * @type {string}
     * @memberof PatchEquipmentStatusInput
     */
    locationFromPlanned?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchEquipmentStatusInput
     */
    locationFromActual?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchEquipmentStatusInput
     */
    locationToPlanned?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchEquipmentStatusInput
     */
    locationToActual?: string;
    /**
     * date when the container is to be returned to the depot according to the order contract.
     * @type {Date}
     * @memberof PatchEquipmentStatusInput
     */
    depotInDatePlanned?: Date;
    /**
     * date when the container is supposed to leave the depot according to the order contract
     * @type {Date}
     * @memberof PatchEquipmentStatusInput
     */
    depotOutDatePlanned?: Date;
    /**
     * date when the container actually returned to the depot.
     * @type {Date}
     * @memberof PatchEquipmentStatusInput
     */
    depotInDateActual?: Date;
    /**
     * date when the container actually left to the depot
     * @type {Date}
     * @memberof PatchEquipmentStatusInput
     */
    depotOutDateActual?: Date;
    /**
     * comment
     * @type {string}
     * @memberof PatchEquipmentStatusInput
     */
    comment?: string;
}

export function PatchEquipmentStatusInputFromJSON(json: any): PatchEquipmentStatusInput {
    return PatchEquipmentStatusInputFromJSONTyped(json, false);
}

export function PatchEquipmentStatusInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchEquipmentStatusInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'locationFromPlanned': !exists(json, 'locationFromPlanned') ? undefined : json['locationFromPlanned'],
        'locationFromActual': !exists(json, 'locationFromActual') ? undefined : json['locationFromActual'],
        'locationToPlanned': !exists(json, 'locationToPlanned') ? undefined : json['locationToPlanned'],
        'locationToActual': !exists(json, 'locationToActual') ? undefined : json['locationToActual'],
        'depotInDatePlanned': !exists(json, 'depotInDatePlanned') ? undefined : (new Date(json['depotInDatePlanned'])),
        'depotOutDatePlanned': !exists(json, 'depotOutDatePlanned') ? undefined : (new Date(json['depotOutDatePlanned'])),
        'depotInDateActual': !exists(json, 'depotInDateActual') ? undefined : (new Date(json['depotInDateActual'])),
        'depotOutDateActual': !exists(json, 'depotOutDateActual') ? undefined : (new Date(json['depotOutDateActual'])),
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
    };
}

export function PatchEquipmentStatusInputToJSON(value?: PatchEquipmentStatusInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'locationFromPlanned': value.locationFromPlanned,
        'locationFromActual': value.locationFromActual,
        'locationToPlanned': value.locationToPlanned,
        'locationToActual': value.locationToActual,
        'depotInDatePlanned': value.depotInDatePlanned === undefined ? undefined : (value.depotInDatePlanned.toISOString()),
        'depotOutDatePlanned': value.depotOutDatePlanned === undefined ? undefined : (value.depotOutDatePlanned.toISOString()),
        'depotInDateActual': value.depotInDateActual === undefined ? undefined : (value.depotInDateActual.toISOString()),
        'depotOutDateActual': value.depotOutDateActual === undefined ? undefined : (value.depotOutDateActual.toISOString()),
        'comment': value.comment,
    };
}


