/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EquipmentMoveInput
 */
export interface EquipmentMoveInput {
    /**
     * 
     * @type {string}
     * @memberof EquipmentMoveInput
     */
    equipmentId: string;
    /**
     * 
     * @type {Date}
     * @memberof EquipmentMoveInput
     */
    pickupDate: Date;
    /**
     * 
     * @type {string}
     * @memberof EquipmentMoveInput
     */
    moveType: EquipmentMoveInputMoveTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EquipmentMoveInput
     */
    equipmentLeaseContractId?: string;
    /**
     * 
     * @type {string}
     * @memberof EquipmentMoveInput
     */
    originId?: string;
    /**
     * 
     * @type {string}
     * @memberof EquipmentMoveInput
     */
    destinationId?: string;
    /**
     * 
     * @type {string}
     * @memberof EquipmentMoveInput
     */
    customerId?: string;
    /**
     * 
     * @type {number}
     * @memberof EquipmentMoveInput
     */
    fixedCosts?: number;
    /**
     * 
     * @type {number}
     * @memberof EquipmentMoveInput
     */
    fixedCostsRatio?: number;
    /**
     * 
     * @type {string}
     * @memberof EquipmentMoveInput
     */
    currency?: string;
    /**
     * 
     * @type {Date}
     * @memberof EquipmentMoveInput
     */
    dropoffDate?: Date;
}

/**
* @export
* @enum {string}
*/
export enum EquipmentMoveInputMoveTypeEnum {
    Repo = 'REPO',
    Mnr = 'MNR',
    Ship = 'SHIP'
}

export function EquipmentMoveInputFromJSON(json: any): EquipmentMoveInput {
    return EquipmentMoveInputFromJSONTyped(json, false);
}

export function EquipmentMoveInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): EquipmentMoveInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'equipmentId': json['equipmentId'],
        'pickupDate': (new Date(json['pickupDate'])),
        'moveType': json['moveType'],
        'equipmentLeaseContractId': !exists(json, 'equipmentLeaseContractId') ? undefined : json['equipmentLeaseContractId'],
        'originId': !exists(json, 'originId') ? undefined : json['originId'],
        'destinationId': !exists(json, 'destinationId') ? undefined : json['destinationId'],
        'customerId': !exists(json, 'customerId') ? undefined : json['customerId'],
        'fixedCosts': !exists(json, 'fixedCosts') ? undefined : json['fixedCosts'],
        'fixedCostsRatio': !exists(json, 'fixedCostsRatio') ? undefined : json['fixedCostsRatio'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'dropoffDate': !exists(json, 'dropoffDate') ? undefined : (new Date(json['dropoffDate'])),
    };
}

export function EquipmentMoveInputToJSON(value?: EquipmentMoveInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'equipmentId': value.equipmentId,
        'pickupDate': (value.pickupDate.toISOString()),
        'moveType': value.moveType,
        'equipmentLeaseContractId': value.equipmentLeaseContractId,
        'originId': value.originId,
        'destinationId': value.destinationId,
        'customerId': value.customerId,
        'fixedCosts': value.fixedCosts,
        'fixedCostsRatio': value.fixedCostsRatio,
        'currency': value.currency,
        'dropoffDate': value.dropoffDate === undefined ? undefined : (value.dropoffDate.toISOString()),
    };
}


