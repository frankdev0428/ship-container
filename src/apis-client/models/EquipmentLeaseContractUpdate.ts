/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EquipmentLeaseContractUpdate
 */
export interface EquipmentLeaseContractUpdate {
    /**
     * 
     * @type {Date}
     * @memberof EquipmentLeaseContractUpdate
     */
    stopAtActual: Date;
    /**
     * 
     * @type {string}
     * @memberof EquipmentLeaseContractUpdate
     */
    endLocationId: string;
    /**
     * 
     * @type {string}
     * @memberof EquipmentLeaseContractUpdate
     */
    comment?: string;
    /**
     * 
     * @type {boolean}
     * @memberof EquipmentLeaseContractUpdate
     */
    active?: boolean;
}

export function EquipmentLeaseContractUpdateFromJSON(json: any): EquipmentLeaseContractUpdate {
    return EquipmentLeaseContractUpdateFromJSONTyped(json, false);
}

export function EquipmentLeaseContractUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): EquipmentLeaseContractUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stopAtActual': (new Date(json['stopAtActual'])),
        'endLocationId': json['endLocationId'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'active': !exists(json, 'active') ? undefined : json['active'],
    };
}

export function EquipmentLeaseContractUpdateToJSON(value?: EquipmentLeaseContractUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stopAtActual': (value.stopAtActual.toISOString()),
        'endLocationId': value.endLocationId,
        'comment': value.comment,
        'active': value.active,
    };
}


