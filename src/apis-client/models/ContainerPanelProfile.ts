/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContainerPanelProfile
 */
export interface ContainerPanelProfile {
    /**
     * 
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    panelProfileId: string;
    /**
     * boardId
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    containerId: string;
    /**
     * createdAt
     * @type {Date}
     * @memberof ContainerPanelProfile
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    leftPanel?: string;
    /**
     * 
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    rightPanel?: string;
    /**
     * 
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    roofPanel?: string;
    /**
     * 
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    endPanel?: string;
    /**
     * 
     * @type {Date}
     * @memberof ContainerPanelProfile
     */
    updatedAt?: Date;
    /**
     * the last user who changed the object
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    lastChangedByUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof ContainerPanelProfile
     */
    lastOperation?: ContainerPanelProfileLastOperationEnum;
}

/**
* @export
* @enum {string}
*/
export enum ContainerPanelProfileLastOperationEnum {
    D = 'D',
    C = 'C',
    U = 'U'
}

export function ContainerPanelProfileFromJSON(json: any): ContainerPanelProfile {
    return ContainerPanelProfileFromJSONTyped(json, false);
}

export function ContainerPanelProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContainerPanelProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'panelProfileId': json['panelProfileId'],
        'containerId': json['containerId'],
        'createdAt': (new Date(json['createdAt'])),
        'leftPanel': !exists(json, 'leftPanel') ? undefined : json['leftPanel'],
        'rightPanel': !exists(json, 'rightPanel') ? undefined : json['rightPanel'],
        'roofPanel': !exists(json, 'roofPanel') ? undefined : json['roofPanel'],
        'endPanel': !exists(json, 'endPanel') ? undefined : json['endPanel'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'lastChangedByUserId': !exists(json, 'lastChangedByUserId') ? undefined : json['lastChangedByUserId'],
        'lastOperation': !exists(json, 'lastOperation') ? undefined : json['lastOperation'],
    };
}

export function ContainerPanelProfileToJSON(value?: ContainerPanelProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'panelProfileId': value.panelProfileId,
        'containerId': value.containerId,
        'createdAt': (value.createdAt.toISOString()),
        'leftPanel': value.leftPanel,
        'rightPanel': value.rightPanel,
        'roofPanel': value.roofPanel,
        'endPanel': value.endPanel,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'lastChangedByUserId': value.lastChangedByUserId,
        'lastOperation': value.lastOperation,
    };
}


