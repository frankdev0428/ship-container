/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Facility,
    FacilityFromJSON,
    FacilityFromJSONTyped,
    FacilityToJSON,
    PublicEquipmentLeaseContractContainer,
    PublicEquipmentLeaseContractContainerFromJSON,
    PublicEquipmentLeaseContractContainerFromJSONTyped,
    PublicEquipmentLeaseContractContainerToJSON,
} from './';

/**
 * 
 * @export
 * @interface PublicEquipmentLeaseContract
 */
export interface PublicEquipmentLeaseContract {
    /**
     * 
     * @type {string}
     * @memberof PublicEquipmentLeaseContract
     */
    equipmentLeaseContractId: string;
    /**
     * 
     * @type {string}
     * @memberof PublicEquipmentLeaseContract
     */
    containerId: string;
    /**
     * 
     * @type {string}
     * @memberof PublicEquipmentLeaseContract
     */
    orderId: string;
    /**
     * 
     * @type {string}
     * @memberof PublicEquipmentLeaseContract
     */
    pickupLocation: string;
    /**
     * 
     * @type {string}
     * @memberof PublicEquipmentLeaseContract
     */
    dropoffLocation: string;
    /**
     * 
     * @type {Date}
     * @memberof PublicEquipmentLeaseContract
     */
    startsAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PublicEquipmentLeaseContract
     */
    stopsAt?: Date;
    /**
     * 
     * @type {PublicEquipmentLeaseContractContainer}
     * @memberof PublicEquipmentLeaseContract
     */
    container?: PublicEquipmentLeaseContractContainer;
    /**
     * orderStatus
     * @type {string}
     * @memberof PublicEquipmentLeaseContract
     */
    orderStatus?: PublicEquipmentLeaseContractOrderStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof PublicEquipmentLeaseContract
     */
    actualReturnDate?: Date;
    /**
     * 
     * @type {Facility}
     * @memberof PublicEquipmentLeaseContract
     */
    pickupLocationDetails?: Facility;
    /**
     * 
     * @type {Facility}
     * @memberof PublicEquipmentLeaseContract
     */
    dropoffLocationDetails?: Facility;
}

/**
* @export
* @enum {string}
*/
export enum PublicEquipmentLeaseContractOrderStatusEnum {
    Created = 'CREATED',
    Accepted = 'ACCEPTED',
    AelerCanceled = 'AELER-CANCELED',
    CustomerCanceled = 'CUSTOMER-CANCELED',
    CompletedFulfilled = 'COMPLETED-FULFILLED',
    CompletedFailed = 'COMPLETED-FAILED'
}

export function PublicEquipmentLeaseContractFromJSON(json: any): PublicEquipmentLeaseContract {
    return PublicEquipmentLeaseContractFromJSONTyped(json, false);
}

export function PublicEquipmentLeaseContractFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicEquipmentLeaseContract {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'equipmentLeaseContractId': json['equipmentLeaseContractId'],
        'containerId': json['containerId'],
        'orderId': json['orderId'],
        'pickupLocation': json['pickupLocation'],
        'dropoffLocation': json['dropoffLocation'],
        'startsAt': !exists(json, 'startsAt') ? undefined : (new Date(json['startsAt'])),
        'stopsAt': !exists(json, 'stopsAt') ? undefined : (new Date(json['stopsAt'])),
        'container': !exists(json, 'container') ? undefined : PublicEquipmentLeaseContractContainerFromJSON(json['container']),
        'orderStatus': !exists(json, 'orderStatus') ? undefined : json['orderStatus'],
        'actualReturnDate': !exists(json, 'actualReturnDate') ? undefined : (new Date(json['actualReturnDate'])),
        'pickupLocationDetails': !exists(json, 'pickupLocationDetails') ? undefined : FacilityFromJSON(json['pickupLocationDetails']),
        'dropoffLocationDetails': !exists(json, 'dropoffLocationDetails') ? undefined : FacilityFromJSON(json['dropoffLocationDetails']),
    };
}

export function PublicEquipmentLeaseContractToJSON(value?: PublicEquipmentLeaseContract | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'equipmentLeaseContractId': value.equipmentLeaseContractId,
        'containerId': value.containerId,
        'orderId': value.orderId,
        'pickupLocation': value.pickupLocation,
        'dropoffLocation': value.dropoffLocation,
        'startsAt': value.startsAt === undefined ? undefined : (value.startsAt.toISOString()),
        'stopsAt': value.stopsAt === undefined ? undefined : (value.stopsAt.toISOString()),
        'container': PublicEquipmentLeaseContractContainerToJSON(value.container),
        'orderStatus': value.orderStatus,
        'actualReturnDate': value.actualReturnDate === undefined ? undefined : (value.actualReturnDate.toISOString()),
        'pickupLocationDetails': FacilityToJSON(value.pickupLocationDetails),
        'dropoffLocationDetails': FacilityToJSON(value.dropoffLocationDetails),
    };
}


