/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LteServiceValues
 */
export interface LteServiceValues {
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    fsmState?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    eventID?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    metadata?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    vid?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    pid?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    bcdDevice?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    iccid?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    signalStrength?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    modemState?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    cid?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    lac?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    mcc?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    mnc?: number;
    /**
     * 
     * @type {number}
     * @memberof LteServiceValues
     */
    tac?: number;
}

export function LteServiceValuesFromJSON(json: any): LteServiceValues {
    return LteServiceValuesFromJSONTyped(json, false);
}

export function LteServiceValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): LteServiceValues {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fsmState': !exists(json, 'fsmState') ? undefined : json['fsmState'],
        'eventID': !exists(json, 'eventID') ? undefined : json['eventID'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'vid': !exists(json, 'vid') ? undefined : json['vid'],
        'pid': !exists(json, 'pid') ? undefined : json['pid'],
        'bcdDevice': !exists(json, 'bcdDevice') ? undefined : json['bcdDevice'],
        'iccid': !exists(json, 'iccid') ? undefined : json['iccid'],
        'signalStrength': !exists(json, 'signalStrength') ? undefined : json['signalStrength'],
        'modemState': !exists(json, 'modemState') ? undefined : json['modemState'],
        'cid': !exists(json, 'cid') ? undefined : json['cid'],
        'lac': !exists(json, 'lac') ? undefined : json['lac'],
        'mcc': !exists(json, 'mcc') ? undefined : json['mcc'],
        'mnc': !exists(json, 'mnc') ? undefined : json['mnc'],
        'tac': !exists(json, 'tac') ? undefined : json['tac'],
    };
}

export function LteServiceValuesToJSON(value?: LteServiceValues | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fsmState': value.fsmState,
        'eventID': value.eventID,
        'metadata': value.metadata,
        'vid': value.vid,
        'pid': value.pid,
        'bcdDevice': value.bcdDevice,
        'iccid': value.iccid,
        'signalStrength': value.signalStrength,
        'modemState': value.modemState,
        'cid': value.cid,
        'lac': value.lac,
        'mcc': value.mcc,
        'mnc': value.mnc,
        'tac': value.tac,
    };
}


