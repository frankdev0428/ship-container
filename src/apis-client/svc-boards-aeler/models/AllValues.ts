/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccelerometerValues,
    AccelerometerValuesFromJSON,
    AccelerometerValuesFromJSONTyped,
    AccelerometerValuesToJSON,
    AmbientSensorValues,
    AmbientSensorValuesFromJSON,
    AmbientSensorValuesFromJSONTyped,
    AmbientSensorValuesToJSON,
    BatteryManagerValues,
    BatteryManagerValuesFromJSON,
    BatteryManagerValuesFromJSONTyped,
    BatteryManagerValuesToJSON,
    CoreInputGpiosValues,
    CoreInputGpiosValuesFromJSON,
    CoreInputGpiosValuesFromJSONTyped,
    CoreInputGpiosValuesToJSON,
    CoreOutputGpiosValues,
    CoreOutputGpiosValuesFromJSON,
    CoreOutputGpiosValuesFromJSONTyped,
    CoreOutputGpiosValuesToJSON,
    CoulombCounterValues,
    CoulombCounterValuesFromJSON,
    CoulombCounterValuesFromJSONTyped,
    CoulombCounterValuesToJSON,
    EventValues,
    EventValuesFromJSON,
    EventValuesFromJSONTyped,
    EventValuesToJSON,
    GpioExpanderValues,
    GpioExpanderValuesFromJSON,
    GpioExpanderValuesFromJSONTyped,
    GpioExpanderValuesToJSON,
    LightSensorValues,
    LightSensorValuesFromJSON,
    LightSensorValuesFromJSONTyped,
    LightSensorValuesToJSON,
    LteServiceValues,
    LteServiceValuesFromJSON,
    LteServiceValuesFromJSONTyped,
    LteServiceValuesToJSON,
    PositionValues,
    PositionValuesFromJSON,
    PositionValuesFromJSONTyped,
    PositionValuesToJSON,
    PowerBudgetValues,
    PowerBudgetValuesFromJSON,
    PowerBudgetValuesFromJSONTyped,
    PowerBudgetValuesToJSON,
    SensorValues,
    SensorValuesFromJSON,
    SensorValuesFromJSONTyped,
    SensorValuesToJSON,
    SystemMonitorServiceValues,
    SystemMonitorServiceValuesFromJSON,
    SystemMonitorServiceValuesFromJSONTyped,
    SystemMonitorServiceValuesToJSON,
} from './';

/**
 * 
 * @export
 * @interface AllValues
 */
export interface AllValues {
    /**
     * 
     * @type {SensorValues}
     * @memberof AllValues
     */
    sensors?: SensorValues;
    /**
     * 
     * @type {PositionValues}
     * @memberof AllValues
     */
    gps?: PositionValues;
    /**
     * 
     * @type {EventValues}
     * @memberof AllValues
     */
    events?: EventValues;
    /**
     * 
     * @type {AccelerometerValues}
     * @memberof AllValues
     */
    accelerometer?: AccelerometerValues;
    /**
     * 
     * @type {AmbientSensorValues}
     * @memberof AllValues
     */
    ambientSensor?: AmbientSensorValues;
    /**
     * 
     * @type {LightSensorValues}
     * @memberof AllValues
     */
    lightSensor?: LightSensorValues;
    /**
     * 
     * @type {BatteryManagerValues}
     * @memberof AllValues
     */
    batteryManager?: BatteryManagerValues;
    /**
     * 
     * @type {PowerBudgetValues}
     * @memberof AllValues
     */
    powerBudget?: PowerBudgetValues;
    /**
     * 
     * @type {CoreOutputGpiosValues}
     * @memberof AllValues
     */
    coreOutputGpios?: CoreOutputGpiosValues;
    /**
     * 
     * @type {CoreInputGpiosValues}
     * @memberof AllValues
     */
    coreInputGpios?: CoreInputGpiosValues;
    /**
     * 
     * @type {GpioExpanderValues}
     * @memberof AllValues
     */
    gpioExpander?: GpioExpanderValues;
    /**
     * 
     * @type {CoulombCounterValues}
     * @memberof AllValues
     */
    coulombCounter?: CoulombCounterValues;
    /**
     * 
     * @type {LteServiceValues}
     * @memberof AllValues
     */
    lteService?: LteServiceValues;
    /**
     * 
     * @type {SystemMonitorServiceValues}
     * @memberof AllValues
     */
    systemMonitorService?: SystemMonitorServiceValues;
    /**
     * tsSubType
     * @type {string}
     * @memberof AllValues
     */
    subType?: AllValuesSubTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum AllValuesSubTypeEnum {
    SensorArrayHw0101 = 'sensorArrayHw0101',
    AccelerometerXyz = 'accelerometerXYZ',
    AccelerometerXyzt = 'accelerometerXYZT',
    Accelerometer2Status = 'accelerometer2Status',
    Accelerometer2GeneralCfg = 'accelerometer2GeneralCfg',
    Accelerometer2FeaturesCfg = 'accelerometer2FeaturesCfg',
    AccelerometerEvent = 'accelerometerEvent',
    Accelerometer2EventDebug = 'accelerometer2EventDebug',
    AmbientThStatus = 'ambientTHStatus',
    AmbientThData = 'ambientTHData',
    AmbientTpStatus = 'ambientTPStatus',
    AmbientTpData = 'ambientTPData',
    AmbientTpStatusAndData = 'ambientTPStatusAndData',
    AmbientIaqStatus = 'ambientIaqStatus',
    AmbientIaqData = 'ambientIaqData',
    AmbientOaqStatus = 'ambientOaqStatus',
    AmbientOaqData = 'ambientOaqData',
    AmbientTpGeneralCfg = 'ambientTPGeneralCfg',
    AmbientTpFeaturesCfg = 'ambientTPFeaturesCfg',
    AmbientThEvent = 'ambientTHEvent',
    Light2Data = 'light2Data',
    Light2Event = 'light2Event',
    Bms2Status = 'bms2Status',
    Bms2Telemetry = 'bms2Telemetry',
    Bms2StatusAndTelem = 'bms2StatusAndTelem',
    Bms2Config = 'bms2Config',
    PowerBudgetStatus = 'powerBudgetStatus',
    PowerSupplyCtrl = 'powerSupplyCtrl',
    Imx7UlpLlwupx = 'imx7UlpLlwupx',
    GpioExp8InputPortReg = 'gpioExp8InputPortReg',
    GpioExp8OutputPortReg = 'gpioExp8OutputPortReg',
    GpioExp8PolarityReg = 'gpioExp8PolarityReg',
    GpioExp8ConfigReg = 'gpioExp8ConfigReg',
    GpioExp8RegsDump = 'gpioExp8RegsDump',
    GpioExp16InputPortReg = 'gpioExp16InputPortReg',
    GpioExp16OutputPortReg = 'gpioExp16OutputPortReg',
    GpioExp16PolarityReg = 'gpioExp16PolarityReg',
    GpioExp16ConfigReg = 'gpioExp16ConfigReg',
    GpioExp16RegsDump = 'gpioExp16RegsDump',
    GpioExp16InputPortEvent = 'gpioExp16InputPortEvent',
    CoulombCounterStatus = 'coulombCounterStatus',
    CoulombCounterReads = 'coulombCounterReads',
    GnssLogEntry = 'gnssLogEntry',
    LteServiceEvent = 'lteServiceEvent',
    LteServiceModemInfo = 'lteServiceModemInfo',
    LteServiceSimInfo = 'lteServiceSimInfo',
    LteServiceStatus = 'lteServiceStatus',
    LteServiceLocationInfo = 'lteServiceLocationInfo',
    LteServiceEvents = 'lteServiceEvents',
    SysMonMetrics = 'sysMonMetrics',
    SysMonHealthCheck = 'sysMonHealthCheck',
    ErrorReportGeneric = 'errorReportGeneric',
    TestStructure1 = 'testStructure1',
    ProductVersion = 'productVersion'
}

export function AllValuesFromJSON(json: any): AllValues {
    return AllValuesFromJSONTyped(json, false);
}

export function AllValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllValues {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sensors': !exists(json, 'sensors') ? undefined : SensorValuesFromJSON(json['sensors']),
        'gps': !exists(json, 'gps') ? undefined : PositionValuesFromJSON(json['gps']),
        'events': !exists(json, 'events') ? undefined : EventValuesFromJSON(json['events']),
        'accelerometer': !exists(json, 'accelerometer') ? undefined : AccelerometerValuesFromJSON(json['accelerometer']),
        'ambientSensor': !exists(json, 'ambientSensor') ? undefined : AmbientSensorValuesFromJSON(json['ambientSensor']),
        'lightSensor': !exists(json, 'lightSensor') ? undefined : LightSensorValuesFromJSON(json['lightSensor']),
        'batteryManager': !exists(json, 'batteryManager') ? undefined : BatteryManagerValuesFromJSON(json['batteryManager']),
        'powerBudget': !exists(json, 'powerBudget') ? undefined : PowerBudgetValuesFromJSON(json['powerBudget']),
        'coreOutputGpios': !exists(json, 'coreOutputGpios') ? undefined : CoreOutputGpiosValuesFromJSON(json['coreOutputGpios']),
        'coreInputGpios': !exists(json, 'coreInputGpios') ? undefined : CoreInputGpiosValuesFromJSON(json['coreInputGpios']),
        'gpioExpander': !exists(json, 'gpioExpander') ? undefined : GpioExpanderValuesFromJSON(json['gpioExpander']),
        'coulombCounter': !exists(json, 'coulombCounter') ? undefined : CoulombCounterValuesFromJSON(json['coulombCounter']),
        'lteService': !exists(json, 'lteService') ? undefined : LteServiceValuesFromJSON(json['lteService']),
        'systemMonitorService': !exists(json, 'systemMonitorService') ? undefined : SystemMonitorServiceValuesFromJSON(json['systemMonitorService']),
        'subType': !exists(json, 'subType') ? undefined : json['subType'],
    };
}

export function AllValuesToJSON(value?: AllValues | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sensors': SensorValuesToJSON(value.sensors),
        'gps': PositionValuesToJSON(value.gps),
        'events': EventValuesToJSON(value.events),
        'accelerometer': AccelerometerValuesToJSON(value.accelerometer),
        'ambientSensor': AmbientSensorValuesToJSON(value.ambientSensor),
        'lightSensor': LightSensorValuesToJSON(value.lightSensor),
        'batteryManager': BatteryManagerValuesToJSON(value.batteryManager),
        'powerBudget': PowerBudgetValuesToJSON(value.powerBudget),
        'coreOutputGpios': CoreOutputGpiosValuesToJSON(value.coreOutputGpios),
        'coreInputGpios': CoreInputGpiosValuesToJSON(value.coreInputGpios),
        'gpioExpander': GpioExpanderValuesToJSON(value.gpioExpander),
        'coulombCounter': CoulombCounterValuesToJSON(value.coulombCounter),
        'lteService': LteServiceValuesToJSON(value.lteService),
        'systemMonitorService': SystemMonitorServiceValuesToJSON(value.systemMonitorService),
        'subType': value.subType,
    };
}


