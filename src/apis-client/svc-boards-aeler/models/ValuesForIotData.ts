/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Events,
    EventsFromJSON,
    EventsFromJSONTyped,
    EventsToJSON,
    ValuesForGpsPositionData,
    ValuesForGpsPositionDataFromJSON,
    ValuesForGpsPositionDataFromJSONTyped,
    ValuesForGpsPositionDataToJSON,
    ValuesForSensorData,
    ValuesForSensorDataFromJSON,
    ValuesForSensorDataFromJSONTyped,
    ValuesForSensorDataToJSON,
} from './';

/**
 * 
 * @export
 * @interface ValuesForIotData
 */
export interface ValuesForIotData {
    /**
     * 
     * @type {ValuesForSensorData}
     * @memberof ValuesForIotData
     */
    sensors?: ValuesForSensorData;
    /**
     * 
     * @type {ValuesForGpsPositionData}
     * @memberof ValuesForIotData
     */
    gps?: ValuesForGpsPositionData;
    /**
     * 
     * @type {Events}
     * @memberof ValuesForIotData
     */
    events?: Events;
}

export function ValuesForIotDataFromJSON(json: any): ValuesForIotData {
    return ValuesForIotDataFromJSONTyped(json, false);
}

export function ValuesForIotDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValuesForIotData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sensors': !exists(json, 'sensors') ? undefined : ValuesForSensorDataFromJSON(json['sensors']),
        'gps': !exists(json, 'gps') ? undefined : ValuesForGpsPositionDataFromJSON(json['gps']),
        'events': !exists(json, 'events') ? undefined : EventsFromJSON(json['events']),
    };
}

export function ValuesForIotDataToJSON(value?: ValuesForIotData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sensors': ValuesForSensorDataToJSON(value.sensors),
        'gps': ValuesForGpsPositionDataToJSON(value.gps),
        'events': EventsToJSON(value.events),
    };
}


