/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AmbientSensorValues
 */
export interface AmbientSensorValues {
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    devId?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    status?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    temp?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    humidity?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    press?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    iaq?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    tvoc?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    etoh1?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    etoh2?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    oaqNO2orFast?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    oaqO3orEPA?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    probNO2?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    ppbNO2?: number;
    /**
     * 
     * @type {number}
     * @memberof AmbientSensorValues
     */
    ppbO3?: number;
}

export function AmbientSensorValuesFromJSON(json: any): AmbientSensorValues {
    return AmbientSensorValuesFromJSONTyped(json, false);
}

export function AmbientSensorValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AmbientSensorValues {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'devId': !exists(json, 'devId') ? undefined : json['devId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'temp': !exists(json, 'temp') ? undefined : json['temp'],
        'humidity': !exists(json, 'humidity') ? undefined : json['humidity'],
        'press': !exists(json, 'press') ? undefined : json['press'],
        'iaq': !exists(json, 'iaq') ? undefined : json['iaq'],
        'tvoc': !exists(json, 'tvoc') ? undefined : json['tvoc'],
        'etoh1': !exists(json, 'etoh1') ? undefined : json['etoh1'],
        'etoh2': !exists(json, 'etoh2') ? undefined : json['etoh2'],
        'oaqNO2orFast': !exists(json, 'oaqNO2orFast') ? undefined : json['oaqNO2orFast'],
        'oaqO3orEPA': !exists(json, 'oaqO3orEPA') ? undefined : json['oaqO3orEPA'],
        'probNO2': !exists(json, 'probNO2') ? undefined : json['probNO2'],
        'ppbNO2': !exists(json, 'ppbNO2') ? undefined : json['ppbNO2'],
        'ppbO3': !exists(json, 'ppbO3') ? undefined : json['ppbO3'],
    };
}

export function AmbientSensorValuesToJSON(value?: AmbientSensorValues | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'devId': value.devId,
        'status': value.status,
        'temp': value.temp,
        'humidity': value.humidity,
        'press': value.press,
        'iaq': value.iaq,
        'tvoc': value.tvoc,
        'etoh1': value.etoh1,
        'etoh2': value.etoh2,
        'oaqNO2orFast': value.oaqNO2orFast,
        'oaqO3orEPA': value.oaqO3orEPA,
        'probNO2': value.probNO2,
        'ppbNO2': value.ppbNO2,
        'ppbO3': value.ppbO3,
    };
}


