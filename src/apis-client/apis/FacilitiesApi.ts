/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Failure,
    FailureFromJSON,
    FailureToJSON,
    Model42,
    Model42FromJSON,
    Model42ToJSON,
} from '../models';

export interface PostFacilitiesFacilityidInventoryRequest {
    facilityId: string;
    body?: Model42;
}

/**
 * 
 */
export class FacilitiesApi extends runtime.BaseAPI {

    /**
     * filter Facilities
     */
    async postFacilitiesFacilityidInventoryRaw(requestParameters: PostFacilitiesFacilityidInventoryRequest): Promise<runtime.ApiResponse<Array<number>>> {
        if (requestParameters.facilityId === null || requestParameters.facilityId === undefined) {
            throw new runtime.RequiredError('facilityId','Required parameter requestParameters.facilityId was null or undefined when calling postFacilitiesFacilityidInventory.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // jwt authentication
        }

        const response = await this.request({
            path: `/facilities/{facilityId}/inventory`.replace(`{${"facilityId"}}`, encodeURIComponent(String(requestParameters.facilityId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: Model42ToJSON(requestParameters.body),
        });

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * filter Facilities
     */
    async postFacilitiesFacilityidInventory(requestParameters: PostFacilitiesFacilityidInventoryRequest): Promise<Array<number>> {
        const response = await this.postFacilitiesFacilityidInventoryRaw(requestParameters);
        return await response.value();
    }

}
