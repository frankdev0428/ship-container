/* tslint:disable */
/* eslint-disable */
/**
 * Nexxiot Boards
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AlertMeasurement,
    AlertMeasurementFromJSON,
    AlertMeasurementFromJSONTyped,
    AlertMeasurementToJSON,
    AssetMeasurement,
    AssetMeasurementFromJSON,
    AssetMeasurementFromJSONTyped,
    AssetMeasurementToJSON,
    DeviceMeasurement,
    DeviceMeasurementFromJSON,
    DeviceMeasurementFromJSONTyped,
    DeviceMeasurementToJSON,
} from './';

/**
 * 
 * @export
 * @interface Values
 */
export interface Values {
    /**
     * 
     * @type {Date}
     * @memberof Values
     */
    measurementTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof Values
     */
    measurementType?: string;
    /**
     * 
     * @type {AssetMeasurement}
     * @memberof Values
     */
    assetMeasurement?: AssetMeasurement;
    /**
     * 
     * @type {DeviceMeasurement}
     * @memberof Values
     */
    deviceMeasurement?: DeviceMeasurement;
    /**
     * 
     * @type {AlertMeasurement}
     * @memberof Values
     */
    alertMeasurement?: AlertMeasurement;
}

export function ValuesFromJSON(json: any): Values {
    return ValuesFromJSONTyped(json, false);
}

export function ValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Values {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'measurementTime': !exists(json, 'measurementTime') ? undefined : (new Date(json['measurementTime'])),
        'measurementType': !exists(json, 'measurementType') ? undefined : json['measurementType'],
        'assetMeasurement': !exists(json, 'assetMeasurement') ? undefined : AssetMeasurementFromJSON(json['assetMeasurement']),
        'deviceMeasurement': !exists(json, 'deviceMeasurement') ? undefined : DeviceMeasurementFromJSON(json['deviceMeasurement']),
        'alertMeasurement': !exists(json, 'alertMeasurement') ? undefined : AlertMeasurementFromJSON(json['alertMeasurement']),
    };
}

export function ValuesToJSON(value?: Values | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'measurementTime': value.measurementTime === undefined ? undefined : (value.measurementTime.toISOString().substr(0,10)),
        'measurementType': value.measurementType,
        'assetMeasurement': AssetMeasurementToJSON(value.assetMeasurement),
        'deviceMeasurement': DeviceMeasurementToJSON(value.deviceMeasurement),
        'alertMeasurement': AlertMeasurementToJSON(value.alertMeasurement),
    };
}


