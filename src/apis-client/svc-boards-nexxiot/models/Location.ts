/* tslint:disable */
/* eslint-disable */
/**
 * Nexxiot Boards
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * A tuple containing the longitude and the latitude
     * @type {Array<number>}
     * @memberof Location
     */
    geometry: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    countryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    cityName?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    regionName?: string;
}

export function LocationFromJSON(json: any): Location {
    return LocationFromJSONTyped(json, false);
}

export function LocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Location {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'geometry': json['geometry'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'cityName': !exists(json, 'cityName') ? undefined : json['cityName'],
        'regionName': !exists(json, 'regionName') ? undefined : json['regionName'],
    };
}

export function LocationToJSON(value?: Location | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'geometry': value.geometry,
        'countryCode': value.countryCode,
        'cityName': value.cityName,
        'regionName': value.regionName,
    };
}


