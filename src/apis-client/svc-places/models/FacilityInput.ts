/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FacilityInputOptional,
    FacilityInputOptionalFromJSON,
    FacilityInputOptionalFromJSONTyped,
    FacilityInputOptionalToJSON,
} from './';

/**
 * 
 * @export
 * @interface FacilityInput
 */
export interface FacilityInput {
    /**
     * Facility name
     * @type {string}
     * @memberof FacilityInput
     */
    name: string;
    /**
     * 4 letter code for company/name
     * @type {string}
     * @memberof FacilityInput
     */
    code: string;
    /**
     * address id
     * @type {string}
     * @memberof FacilityInput
     */
    addressId: string;
    /**
     * partnership types
     * @type {Array<string>}
     * @memberof FacilityInput
     */
    partnershipTypes: Array<FacilityInputPartnershipTypesEnum>;
    /**
     * types of facilities
     * @type {string}
     * @memberof FacilityInput
     */
    type: FacilityInputTypeEnum;
    /**
     * 
     * @type {FacilityInputOptional}
     * @memberof FacilityInput
     */
    optional?: FacilityInputOptional;
}

/**
* @export
* @enum {string}
*/
export enum FacilityInputPartnershipTypesEnum {
    Storage = 'Storage',
    MnR = 'MnR',
    Haulage = 'Haulage'
}/**
* @export
* @enum {string}
*/
export enum FacilityInputTypeEnum {
    Bocr = 'BOCR',
    Culo = 'CULO',
    Cofs = 'COFS',
    Coya = 'COYA',
    Depo = 'DEPO',
    Inte = 'INTE',
    Pote = 'POTE',
    Pbst = 'PBST'
}

export function FacilityInputFromJSON(json: any): FacilityInput {
    return FacilityInputFromJSONTyped(json, false);
}

export function FacilityInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): FacilityInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'code': json['code'],
        'addressId': json['addressId'],
        'partnershipTypes': json['partnershipTypes'],
        'type': json['type'],
        'optional': !exists(json, 'optional') ? undefined : FacilityInputOptionalFromJSON(json['optional']),
    };
}

export function FacilityInputToJSON(value?: FacilityInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'code': value.code,
        'addressId': value.addressId,
        'partnershipTypes': value.partnershipTypes,
        'type': value.type,
        'optional': FacilityInputOptionalToJSON(value.optional),
    };
}


