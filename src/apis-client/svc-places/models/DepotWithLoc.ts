/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DepotAddress,
    DepotAddressFromJSON,
    DepotAddressFromJSONTyped,
    DepotAddressToJSON,
} from './';

/**
 * 
 * @export
 * @interface DepotWithLoc
 */
export interface DepotWithLoc {
    /**
     * CC-CCC-DDDD-NNN
     * @type {string}
     * @memberof DepotWithLoc
     */
    depotId: string;
    /**
     * Depot name
     * @type {string}
     * @memberof DepotWithLoc
     */
    name: string;
    /**
     * address Id
     * @type {string}
     * @memberof DepotWithLoc
     */
    addressId: string;
    /**
     * partnership types
     * @type {Array<string>}
     * @memberof DepotWithLoc
     */
    partnershipTypes: Array<DepotWithLocPartnershipTypesEnum>;
    /**
     * latest status
     * @type {string}
     * @memberof DepotWithLoc
     */
    latestStatusId?: string;
    /**
     * identifiers_bicId
     * @type {string}
     * @memberof DepotWithLoc
     */
    identifiers_bicId?: string;
    /**
     * identifiers_smdgId
     * @type {string}
     * @memberof DepotWithLoc
     */
    identifiers_smdgId?: string;
    /**
     * identifiers_imoId
     * @type {string}
     * @memberof DepotWithLoc
     */
    identifiers_imoId?: string;
    /**
     * Operator Name
     * @type {string}
     * @memberof DepotWithLoc
     */
    operatorName?: string;
    /**
     * Operator ID
     * @type {string}
     * @memberof DepotWithLoc
     */
    operatorID?: string;
    /**
     * area in squared meters
     * @type {number}
     * @memberof DepotWithLoc
     */
    charateristics_area?: number;
    /**
     * location Id
     * @type {string}
     * @memberof DepotWithLoc
     */
    locationId?: string;
    /**
     * 
     * @type {DepotAddress}
     * @memberof DepotWithLoc
     */
    address?: DepotAddress;
}

/**
* @export
* @enum {string}
*/
export enum DepotWithLocPartnershipTypesEnum {
    Storage = 'Storage',
    MnR = 'MnR',
    Haulage = 'Haulage'
}

export function DepotWithLocFromJSON(json: any): DepotWithLoc {
    return DepotWithLocFromJSONTyped(json, false);
}

export function DepotWithLocFromJSONTyped(json: any, ignoreDiscriminator: boolean): DepotWithLoc {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'depotId': json['depotId'],
        'name': json['name'],
        'addressId': json['addressId'],
        'partnershipTypes': json['partnershipTypes'],
        'latestStatusId': !exists(json, 'latestStatusId') ? undefined : json['latestStatusId'],
        'identifiers_bicId': !exists(json, 'identifiers_bicId') ? undefined : json['identifiers_bicId'],
        'identifiers_smdgId': !exists(json, 'identifiers_smdgId') ? undefined : json['identifiers_smdgId'],
        'identifiers_imoId': !exists(json, 'identifiers_imoId') ? undefined : json['identifiers_imoId'],
        'operatorName': !exists(json, 'operatorName') ? undefined : json['operatorName'],
        'operatorID': !exists(json, 'operatorID') ? undefined : json['operatorID'],
        'charateristics_area': !exists(json, 'charateristics_area') ? undefined : json['charateristics_area'],
        'locationId': !exists(json, 'locationId') ? undefined : json['locationId'],
        'address': !exists(json, 'address') ? undefined : DepotAddressFromJSON(json['address']),
    };
}

export function DepotWithLocToJSON(value?: DepotWithLoc | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'depotId': value.depotId,
        'name': value.name,
        'addressId': value.addressId,
        'partnershipTypes': value.partnershipTypes,
        'latestStatusId': value.latestStatusId,
        'identifiers_bicId': value.identifiers_bicId,
        'identifiers_smdgId': value.identifiers_smdgId,
        'identifiers_imoId': value.identifiers_imoId,
        'operatorName': value.operatorName,
        'operatorID': value.operatorID,
        'charateristics_area': value.charateristics_area,
        'locationId': value.locationId,
        'address': DepotAddressToJSON(value.address),
    };
}


