/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CenterPoint,
    CenterPointFromJSON,
    CenterPointFromJSONTyped,
    CenterPointToJSON,
} from './';

/**
 * City
 * @export
 * @interface City
 */
export interface City {
    /**
     * city id
     * @type {string}
     * @memberof City
     */
    cityId: string;
    /**
     * name
     * @type {string}
     * @memberof City
     */
    name: string;
    /**
     * location_country_code
     * @type {string}
     * @memberof City
     */
    countryId?: string;
    /**
     * location_region_code
     * @type {string}
     * @memberof City
     */
    location_region_code?: string;
    /**
     * 
     * @type {CenterPoint}
     * @memberof City
     */
    centerPoint?: CenterPoint;
    /**
     * identifiers_iso3
     * @type {string}
     * @memberof City
     */
    identifiers_iso3?: string;
    /**
     * identifiers_iso5 un locode
     * @type {string}
     * @memberof City
     */
    identifiers_iso5?: string;
    /**
     * identifiers_iata
     * @type {string}
     * @memberof City
     */
    identifiers_iata?: string;
    /**
     * names_en
     * @type {string}
     * @memberof City
     */
    names_en?: string;
}

export function CityFromJSON(json: any): City {
    return CityFromJSONTyped(json, false);
}

export function CityFromJSONTyped(json: any, ignoreDiscriminator: boolean): City {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cityId': json['cityId'],
        'name': json['name'],
        'countryId': !exists(json, 'countryId') ? undefined : json['countryId'],
        'location_region_code': !exists(json, 'location_region_code') ? undefined : json['location_region_code'],
        'centerPoint': !exists(json, 'centerPoint') ? undefined : CenterPointFromJSON(json['centerPoint']),
        'identifiers_iso3': !exists(json, 'identifiers_iso3') ? undefined : json['identifiers_iso3'],
        'identifiers_iso5': !exists(json, 'identifiers_iso5') ? undefined : json['identifiers_iso5'],
        'identifiers_iata': !exists(json, 'identifiers_iata') ? undefined : json['identifiers_iata'],
        'names_en': !exists(json, 'names_en') ? undefined : json['names_en'],
    };
}

export function CityToJSON(value?: City | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cityId': value.cityId,
        'name': value.name,
        'countryId': value.countryId,
        'location_region_code': value.location_region_code,
        'centerPoint': CenterPointToJSON(value.centerPoint),
        'identifiers_iso3': value.identifiers_iso3,
        'identifiers_iso5': value.identifiers_iso5,
        'identifiers_iata': value.identifiers_iata,
        'names_en': value.names_en,
    };
}


