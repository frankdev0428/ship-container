/* tslint:disable */
/* eslint-disable */
/**
 * Aeler demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CityInput
 */
export interface CityInput {
    /**
     * location_country_code
     * @type {string}
     * @memberof CityInput
     */
    countryId?: string;
    /**
     * location_region_code
     * @type {string}
     * @memberof CityInput
     */
    location_region_code?: string;
    /**
     * location_geometry_type
     * @type {string}
     * @memberof CityInput
     */
    location_geometry_type?: string;
    /**
     * location_geometry_coordinates
     * @type {string}
     * @memberof CityInput
     */
    location_geometry_coordinates?: string;
    /**
     * identifiers_iso3
     * @type {string}
     * @memberof CityInput
     */
    identifiers_iso3?: string;
    /**
     * identifiers_iso5
     * @type {string}
     * @memberof CityInput
     */
    identifiers_iso5?: string;
    /**
     * identifiers_iata
     * @type {string}
     * @memberof CityInput
     */
    identifiers_iata?: string;
    /**
     * names_en
     * @type {string}
     * @memberof CityInput
     */
    names_en?: string;
}

export function CityInputFromJSON(json: any): CityInput {
    return CityInputFromJSONTyped(json, false);
}

export function CityInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countryId': !exists(json, 'countryId') ? undefined : json['countryId'],
        'location_region_code': !exists(json, 'location_region_code') ? undefined : json['location_region_code'],
        'location_geometry_type': !exists(json, 'location_geometry_type') ? undefined : json['location_geometry_type'],
        'location_geometry_coordinates': !exists(json, 'location_geometry_coordinates') ? undefined : json['location_geometry_coordinates'],
        'identifiers_iso3': !exists(json, 'identifiers_iso3') ? undefined : json['identifiers_iso3'],
        'identifiers_iso5': !exists(json, 'identifiers_iso5') ? undefined : json['identifiers_iso5'],
        'identifiers_iata': !exists(json, 'identifiers_iata') ? undefined : json['identifiers_iata'],
        'names_en': !exists(json, 'names_en') ? undefined : json['names_en'],
    };
}

export function CityInputToJSON(value?: CityInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countryId': value.countryId,
        'location_region_code': value.location_region_code,
        'location_geometry_type': value.location_geometry_type,
        'location_geometry_coordinates': value.location_geometry_coordinates,
        'identifiers_iso3': value.identifiers_iso3,
        'identifiers_iso5': value.identifiers_iso5,
        'identifiers_iata': value.identifiers_iata,
        'names_en': value.names_en,
    };
}


